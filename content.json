{"meta":{"title":"lance","subtitle":"生活不苟且","description":"个人主页呀~","author":"lance","url":"http://yoursite.com"},"pages":[{"title":"404","date":"2018-03-31T06:03:21.000Z","updated":"2018-03-31T06:03:21.945Z","comments":true,"path":"404/index.html","permalink":"http://yoursite.com/404/index.html","excerpt":"","text":""},{"title":"search","date":"2018-03-31T06:03:07.000Z","updated":"2018-03-31T06:03:07.779Z","comments":true,"path":"search/index.html","permalink":"http://yoursite.com/search/index.html","excerpt":"","text":""}],"posts":[{"title":"使用js-sdk自定义微信分享~","slug":"20180403","date":"2018-04-03T09:57:58.436Z","updated":"2018-04-03T09:57:58.438Z","comments":true,"path":"2018/04/03/20180403/","link":"","permalink":"http://yoursite.com/2018/04/03/20180403/","excerpt":"","text":"初始效果 准备工作 已认证的微信服务号~ 需要获取里面的几个参数（下面详细介绍）。 一个ICP备案的域名：需要用这个域名设置微信公众号的js接口安全域名，否则微信仍然不给调用它的接口！ 难道不能在本地测试了吗？？肯定可以呀！ 这里提供一个解决方法： 花生壳官网：http://hsk.oray.com/price/#personal 选择个人免费版的就ok了，申请个最便宜的域名 5元左右就可以开始测试啦~ 工欲善其事必先利其器！测试开发必须先下个开发工具，用于本地调试！！！ 下载地址：https://mp.weixin.qq.com/debug/cgi-bin/webdebugger/download?from=mpwiki&amp;os=x64 官方使用教程：https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1455784140 开始啦1：进入微信开发平台 配置需要用到的参数 !!! 一定要记住AppSecret 不然很麻烦！！ 接着配置js接口安全域名 记住：一定要将文件MP_XXXXX 放在web服务器目录下 2：在页面引入js文件 （如果域名前缀是https的话，引用也必须是https，不然会出错） 1&lt;script src=&quot;http://res.wx.qq.com/open/js/jweixin-1.2.0.js&quot; &gt;&lt;/script&gt; 3：通过appid，appsecret请求accessToken，然后通过accessToken获取jsapi_ticket，生成wx.config接口所需要的参数 123456789101112131415wx.config(&#123; debug: false,//正式服务器得关闭debug，测试的时候可以打开设置为true appId: &apos;&apos;, //appid timestamp: timestamp, //后台生成时间戳 nonceStr: noncestr, //后台随机生成的字符串（S在前端要大写，后台获取时是小写s！） signature: signature,//后台生成签名 jsApiList: [ &apos;checkJsApi&apos;, &apos;onMenuShareTimeline&apos;, &apos;onMenuShareAppMessage&apos;, &apos;onMenuShareQQ&apos;, &apos;onMenuShareWeibo&apos;, &apos;onMenuShareQZone&apos; ]&#125;) 附上后台代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178public class WeiXinBiz &#123; public final static String access_token_url=&quot;https://api.weixin.qq.com/cgi-bin/token?&quot; + &quot;grant_type=client_credential&amp;appid=APPID&amp;secret=APPSECRET&quot;; public final static String jsapi_ticket_url=&quot;https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=ACCESS_TOKEN&amp;type=jsapi&quot;; /** * 获取微信分享配置数据（签名，时间戳，随机字符串） * * 接口url * @return */ public Map&lt;String, Object&gt; getWeixinConfig(String url, String type)&#123; Map&lt;String, Object&gt; map = new HashMap&lt;String, Object&gt;(); //获取access_token String access_token = getAccess_token(); if(access_token == null)&#123; map.put(&quot;result&quot;, &quot;access_token获取失败&quot;); return map; &#125; //获取jsapi_ticket String jsapi_ticket = getJsapi_ticket(access_token); if(jsapi_ticket == null)&#123; map.put(&quot;result&quot;, &quot;jsapi_ticket获取失败&quot;); return map; &#125; //生成签名 String noncestr = &quot;Wm3WZYTPz0wzccnW&quot;; //字符串 //String url = &quot;http://www.repinhr.com/possition/&quot;+type+&quot;/&quot;+id+&quot;.html&quot;; String timestamp = System.currentTimeMillis()+&quot;&quot;;//时间戳 timestamp = timestamp.substring(0, 10); String[] signatureArray = new String[]&#123; &quot;jsapi_ticket=&quot;+jsapi_ticket, &quot;noncestr=&quot;+noncestr, &quot;timestamp=&quot;+timestamp, &quot;url=&quot;+url &#125;; Arrays.sort(signatureArray); String signatureStr = signatureArray[0]+&quot;&amp;&quot; +signatureArray[1]+&quot;&amp;&quot;+signatureArray[2]+&quot;&amp;&quot;+signatureArray[3]; String signature = new MySecurity().encode(signatureStr,MySecurity.SHA_1); System.out.println(&quot;----jsapi_ticket-----::&quot;+jsapi_ticket); System.out.println(&quot;----timestamp-----::&quot;+timestamp); System.out.println(&quot;----noncestr-----::&quot;+noncestr); System.out.println(&quot;----signature-----::&quot;+signature); map.put(&quot;jsapi_ticket&quot;, jsapi_ticket); map.put(&quot;timestamp&quot;, timestamp); map.put(&quot;noncestr&quot;, noncestr); map.put(&quot;signature&quot;, signature); return map; &#125; /** * 获取微信jsapi_ticket * * @return */ public String getJsapi_ticket(String access_token)&#123; String requestUrl = jsapi_ticket_url.replace(&quot;ACCESS_TOKEN&quot;, access_token); JSONObject jsonObject=httpRequst(requestUrl, &quot;GET&quot;, null); if(jsonObject != null)&#123; return jsonObject.getString(&quot;ticket&quot;); &#125;else&#123; return null; &#125; &#125; /** * 获取微信access_token * * @return */ public String getAccess_token()&#123; //String pathClass = this.getClass().getClassLoader().getResource(&quot;/&quot;).getPath();// 服务器Classes根路径 String appid = &quot;wxfdd7423dfbfa8fa1&quot;; String appsecret =&quot;d4c7d953f6d5060ab6ea10b12652d310&quot;; String requestUrl = access_token_url.replace(&quot;APPID&quot;, appid).replace(&quot;APPSECRET&quot;, appsecret); JSONObject jsonObject=httpRequst(requestUrl, &quot;GET&quot;, null); if(jsonObject != null)&#123; return jsonObject.getString(&quot;access_token&quot;); &#125;else&#123; return null; &#125; &#125; /** * 请求接口 * * @param requestUrl * 接口url * @return */ public JSONObject httpRequst(String requestUrl,String requetMethod,String outputStr)&#123; JSONObject jsonobject=null; StringBuffer buffer=new StringBuffer(); try &#123; //创建SSLContext对象，并使用我们指定的新人管理器初始化 TrustManager[] tm=&#123;new MyX509TrustManager()&#125;; SSLContext sslcontext=SSLContext.getInstance(&quot;SSL&quot;,&quot;SunJSSE&quot;); sslcontext.init(null, tm, new java.security.SecureRandom()); //从上述SSLContext对象中得到SSLSocktFactory对象 SSLSocketFactory ssf=sslcontext.getSocketFactory(); URL url=new URL(requestUrl); HttpsURLConnection httpUrlConn=(HttpsURLConnection)url.openConnection(); httpUrlConn.setSSLSocketFactory(ssf); httpUrlConn.setDoOutput(true); httpUrlConn.setDoInput(true); httpUrlConn.setUseCaches(false); //设置请求方式（GET/POST） httpUrlConn.setRequestMethod(requetMethod); if(&quot;GET&quot;.equalsIgnoreCase(requetMethod)) httpUrlConn.connect(); //当有数据需要提交时 if(null!=outputStr) &#123; OutputStream outputStream=httpUrlConn.getOutputStream(); //注意编码格式，防止中文乱码 outputStream.write(outputStr.getBytes(&quot;UTF-8&quot;)); outputStream.close(); &#125; //将返回的输入流转换成字符串 InputStream inputStream=httpUrlConn.getInputStream(); InputStreamReader inputStreamReader=new InputStreamReader(inputStream,&quot;utf-8&quot;); BufferedReader bufferedReader=new BufferedReader(inputStreamReader); String str=null; while((str = bufferedReader.readLine()) !=null) &#123; buffer.append(str); &#125; bufferedReader.close(); inputStreamReader.close(); //释放资源 inputStream.close(); inputStream=null; httpUrlConn.disconnect(); jsonobject=JSONObject.fromObject(buffer.toString()); &#125; catch (ConnectException ce) &#123; // TODO: handle exception &#125; catch (Exception e) &#123; &#125; return jsonobject; &#125;&#125;//================================================获取access_token==============================================================class MyX509TrustManager implements X509TrustManager&#123; public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException &#123; // TODO Auto-generated method stub &#125; public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException &#123; // TODO Auto-generated method stub &#125; public X509Certificate[] getAcceptedIssuers() &#123; // TODO Auto-generated method stub return null; &#125;&#125; 这里需要引入一个weixinapi.jar 前端代码附上: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899/** * 微信分享 */var imgUrl = &apos;&apos;;//写上图片路径var lineLink = &apos;&apos;;//分享链接的url路径var shareTitle = &apos;&apos;;//分享标题var descContent = &quot;&quot;;//分享内容var timestamp = &quot;&quot;;//不用填写，后台获取var noncestr = &quot;&quot;;var signature = &quot;&quot;;$.ajax(&#123; type : &quot;POST&quot;, url : &apos;&apos;, //通过ajax请求，获取后台微信配置数据 dataType : &apos;json&apos;, data : &#123;url:lineLink&#125;, cache : true, success : function(data) &#123; timestamp = data.timestamp; noncestr = data.noncestr; signature = data.signature; wx.config(&#123; debug: false, appId: &apos;&apos;, timestamp: timestamp, nonceStr: noncestr, signature: signature, jsApiList: [ &apos;checkJsApi&apos;, //测试是否成功访问js接口 &apos;onMenuShareTimeline&apos;, &apos;onMenuShareAppMessage&apos;, &apos;onMenuShareQQ&apos;, &apos;onMenuShareWeibo&apos;, &apos;onMenuShareQZone&apos; ] &#125;) &#125;&#125;);wx.ready(function () &#123; wx.onMenuShareAppMessage(&#123; //分享给好友 title: shareTitle, desc: descContent, link: lineLink, imgUrl: imgUrl, trigger: function(res) &#123; // 不要尝试在trigger中使用ajax异步请求修改本次分享的内容，因为客户端分享操作是一个同步操作，这时候使用ajax的回包会还没有返回 &#125;, success: function(res) &#123; //成功分享后，调用此处 &#125;, cancel: function(res) &#123;&#125;, fail: function(res) &#123;&#125; &#125;); wx.onMenuShareTimeline(&#123; //分享朋友圈 title: shareTitle, link: lineLink, imgUrl: imgUrl, trigger: function(res) &#123; // 不要尝试在trigger中使用ajax异步请求修改本次分享的内容，因为客户端分享操作是一个同步操作，这时候使用ajax的回包会还没有返回 &#125;, success: function(res) &#123;&#125;, cancel: function(res) &#123;&#125;, fail: function(res) &#123;&#125; &#125;); wx.onMenuShareQQ(&#123; title: shareTitle, desc: descContent, link: lineLink, imgUrl: imgUrl, trigger: function(res) &#123;&#125;, complete: function(res) &#123;&#125;, success: function(res) &#123;&#125;, cancel: function(res) &#123;&#125;, fail: function(res) &#123;&#125; &#125;); wx.onMenuShareWeibo(&#123; title: shareTitle, desc: descContent, link: lineLink, imgUrl: imgUrl, trigger: function(res) &#123;&#125;, complete: function(res) &#123;&#125;, success: function(res) &#123;&#125;, cancel: function(res) &#123;&#125;, fail: function(res) &#123;&#125; &#125;); wx.onMenuShareQZone(&#123; title: shareTitle, desc: descContent, link: lineLink, imgUrl: imgUrl, trigger: function(res) &#123;&#125;, complete: function(res) &#123;&#125;, success: function(res) &#123;&#125;, cancel: function(res) &#123;&#125;, fail: function(res) &#123;&#125; &#125;);&#125;); 到这里代码已经写完啦~ 4：开始用微信开发者工具测试~~ 在前面的代码里设置debug为true，测试成功后记得改回false哦！ 5：成功效果图 ！！！！！！！！！！！！！！！！！！！！ 开心开心","categories":[],"tags":[]},{"title":"第一篇博客~","slug":"20180331","date":"2018-03-31T08:51:28.228Z","updated":"2018-03-31T08:51:28.229Z","comments":true,"path":"2018/03/31/20180331/","link":"","permalink":"http://yoursite.com/2018/03/31/20180331/","excerpt":"","text":"​ 好久没有写过博客了.. 第一次搭博客网站，感觉有点小low0.0 但是没关系呀，慢慢来嘛！ ​ 说真的，我的文笔很好的！想当年，金戈铁马，粪土当年万户侯，怅寥廓，问苍茫大地，谁主沉浮？小脑袋随便一转，一句脍炙人口的诗词就随着键盘啪啪啪的打出来了。自恋到此为止啦，以后有时间就会在这里写一下心情呀，工作经验呀等等等。 ​ 关于一些专业的问题，可能我理解的和其他大牛不一样，请大家多多包涵 看过后一笑了之就好啦，毕竟我还是一个菜鸟^_^","categories":[],"tags":[{"name":"嘻嘻嘻","slug":"嘻嘻嘻","permalink":"http://yoursite.com/tags/嘻嘻嘻/"}]}]}